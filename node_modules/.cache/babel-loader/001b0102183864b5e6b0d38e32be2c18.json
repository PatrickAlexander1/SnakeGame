{"ast":null,"code":"var _jsxFileName = \"/Users/patrickwellins/Desktop/games/snake/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport EventListener, { withOptions } from 'react-event-listener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst genRandomXY = () => {\n  const y = Math.floor(Math.random() * 15);\n  const x = Math.floor(Math.random() * 23);\n  return [x * 20, y * 20];\n};\n\nclass Snake {\n  constructor(x, y, direction) {\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n    this.snakeBody = {\n      0: [this.x, this.y],\n      1: [this.x - 20, this.y],\n      2: [this.x - 40, this.y],\n      3: [this.x - 60, this.y]\n    };\n  }\n\n  changeDirection(direction) {\n    this.direction = direction;\n  }\n\n  getTail() {\n    return this.snakeBody[this.hasBody() - 1];\n  }\n\n  updatePostion(collision) {\n    let tail = this.getTail();\n\n    if (this.hasBody() > 1) {\n      for (let i = this.hasBody() - 1; i >= 1; i--) {\n        this.snakeBody[i] = this.snakeBody[i - 1];\n      }\n    }\n\n    if (collision) {\n      this.snakeBody[this.hasBody()] = tail;\n    }\n\n    if (this.direction == 'up') {\n      this.y -= 20;\n    } else if (this.direction == 'down') {\n      this.y += 20;\n    } else if (this.direction == 'left') {\n      this.x -= 20;\n    } else if (this.direction == 'right') {\n      this.x += 20;\n    } else if (this.direction == 'pause') {//pass\n    }\n\n    this.snakeBody[0] = [this.x, this.y];\n  }\n\n  x() {\n    return this.x;\n  }\n\n  y() {\n    return this.y;\n  }\n\n  hasBody() {\n    return Object.keys(this.snakeBody).length;\n  }\n\n}\n\nclass Apple {\n  constructor() {\n    let randCoords = genRandomXY();\n    this.x = randCoords[0];\n    this.y = randCoords[1];\n  }\n\n  collision(snakeX, snakeY) {\n    if (snakeX === this.x && snakeY === this.y) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  redraw(snakeX, snakeY) {\n    if (this.collision(snakeX, snakeY)) {\n      let randCoords = genRandomXY();\n      this.x = randCoords[0];\n      this.y = randCoords[1];\n    }\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n}\n\nconst snake = new Snake(100, 100, 'right');\nconst apple = new Apple();\n\nconst Position = ({\n  stateX,\n  stateY\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"100px\"\n    },\n    children: [\" \", stateX, \" \", stateY, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Position;\nconst Game = /*#__PURE__*/React.memo(_c2 = _s(({\n  setStateX,\n  setStateY\n}) => {\n  _s();\n\n  let dx = 0;\n  let dy = 0;\n  let appleExists = false;\n  const squares = {};\n\n  for (let i = 0; i < 16; i++) {\n    squares[i * 20] = {};\n\n    for (let j = 0; j < 24; j++) {\n      squares[i * 20][j * 20] = false;\n    }\n  }\n\n  let cW;\n  let cH;\n\n  const gameLogic = (ctx, canvas) => {\n    drawSnake(ctx, canvas);\n    drawApple(ctx, canvas);\n    console.apple.collision(snake.x, snake.y);\n    apple.redraw(snake.x, snake.y);\n  };\n\n  useEffect(() => {\n    const canvas = cRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    cW = canvas.width / 2;\n    cH = canvas.height / 2;\n    squares[cW][cH] = true; // let coords = genRandomXY()\n\n    setStateX(cW);\n    setStateY(cH);\n    setInterval(() => {\n      gameLogic(ctx, canvas);\n    }, 150);\n    window.addEventListener('keydown', logKey, cW, cH);\n    return () => {\n      window.removeEventListener('keydown', logKey, cW, cH);\n    };\n  });\n\n  const logKey = event => {\n    if (event.code === \"ArrowRight\") {\n      snake.changeDirection(\"right\");\n    } else if (event.code === \"ArrowLeft\") {\n      snake.changeDirection(\"left\");\n    } else if (event.code === \"ArrowUp\") {\n      snake.changeDirection(\"up\");\n    } else if (event.code === \"ArrowDown\") {\n      snake.changeDirection(\"down\");\n    } else if (event.keyCode === 32) {\n      snake.changeDirection(\"pause\");\n    }\n  };\n\n  function drawSnake(ctx, canvas) {\n    const squareSide = 20;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n\n    if (snake.hasBody() > 0) {\n      for (let i = 0; i <= snake.hasBody() - 1; i++) {\n        ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n      }\n    }\n\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawApple(ctx, canvas, x, y) {\n    const appleRadius = 10;\n    ctx.beginPath();\n    ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI * 2);\n    ctx.fillStyle = \"#D32F2F\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const cRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        background: \"#eee\",\n        display: \"block\",\n        margin: \"0 auto\"\n      },\n      id: \"myCanvas\",\n      width: \"480\",\n      height: \"320\",\n      ref: cRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}, \"URm58pgjXa+ECeiVHN1N38QXQss=\"));\n_c3 = Game;\n\nfunction App() {\n  _s2();\n\n  const [stateX, setStateX] = useState(240);\n  const [stateY, setStateY] = useState(160);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Game, {\n      setStateX: setStateX,\n      setStateY: setStateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Position, {\n      stateX: stateX,\n      stateY: stateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"z/9Tpgp52heXM9WS/DEC/+/vP/U=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Position\");\n$RefreshReg$(_c2, \"Game$React.memo\");\n$RefreshReg$(_c3, \"Game\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/patrickwellins/Desktop/games/snake/src/App.js"],"names":["React","useState","useEffect","useRef","EventListener","withOptions","genRandomXY","y","Math","floor","random","x","Snake","constructor","direction","snakeBody","changeDirection","getTail","hasBody","updatePostion","collision","tail","i","Object","keys","length","Apple","randCoords","snakeX","snakeY","redraw","getX","getY","snake","apple","Position","stateX","stateY","marginLeft","Game","memo","setStateX","setStateY","dx","dy","appleExists","squares","j","cW","cH","gameLogic","ctx","canvas","drawSnake","drawApple","console","cRef","current","getContext","width","height","setInterval","window","addEventListener","logKey","removeEventListener","event","code","keyCode","squareSide","clearRect","beginPath","rect","fillStyle","fill","closePath","appleRadius","arc","PI","background","display","margin","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport EventListener, {withOptions} from 'react-event-listener';\n\nconst genRandomXY = () => {\nconst y = Math.floor(Math.random() * 15)\nconst x = Math.floor(Math.random() * 23)\nreturn [x * 20, y * 20]\n}\n\n\n\nclass Snake {\n  constructor(x, y, direction) {\n    this.x = x\n    this.y = y\n    this.direction = direction\n    this.snakeBody = {0:[this.x , this.y], 1:[this.x - 20, this.y], 2:[this.x - 40, this.y], 3:[this.x - 60, this.y]}\n  }\n\n  changeDirection(direction){\n    this.direction = direction\n  }\n\n  getTail(){\n    return this.snakeBody[this.hasBody() - 1]\n  }\n\n  updatePostion(collision){\n\n    let tail = this.getTail()\n\n    if (this.hasBody() > 1){\n\n      for (let i = this.hasBody() - 1; i >= 1; i--){\n        this.snakeBody[i] = this.snakeBody[i - 1]\n      }\n  }\n\n  if (collision){\n    this.snakeBody[this.hasBody()] = tail\n  }\n\n    if (this.direction == 'up'){\n      this.y -= 20\n    }\n    else if (this.direction == 'down'){\n      this.y += 20\n    }\n    else if (this.direction == 'left'){\n      this.x -= 20\n    }\n    else if (this.direction == 'right'){\n      this.x += 20\n    }\n    else if (this.direction == 'pause'){\n      //pass\n    }\n    this.snakeBody[0] = [this.x, this.y]\n\n}\n\n\n  x(){\n    return this.x\n  }\n\n  y(){\n    return this.y\n  }\n\n  hasBody() {\n    return Object.keys(this.snakeBody).length\n  }\n\n\n}\n\nclass Apple {\n\n  constructor() {\n    let randCoords = genRandomXY()\n    this.x = randCoords[0]\n    this.y = randCoords[1]\n  }\n\n  collision(snakeX, snakeY) {\n    if (snakeX === this.x && snakeY === this.y){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  redraw(snakeX, snakeY){\n    if (this.collision(snakeX, snakeY)){\n      let randCoords = genRandomXY()\n      this.x = randCoords[0]\n      this.y = randCoords[1]\n    }\n  }\n\n  getX(){\n    return this.x\n  }\n\n  getY(){\n    return this.y\n  }\n\n}\n\nconst snake = new Snake(100, 100, 'right')\nconst apple = new Apple()\nconst Position = ({stateX, stateY}) => {\n\n  return(\n    <div style={{marginLeft: \"100px\"}}> {stateX} {stateY} </div>\n  )\n}\n\n\n\n\nconst Game = React.memo(({setStateX, setStateY}) => {\n\n  let dx = 0\n  let dy = 0\n\n  let appleExists = false\n\n  const squares = {}\n  for (let i = 0; i < 16; i++){\n    squares[i * 20] = {}\n    for (let j = 0; j < 24; j++){\n      squares[i * 20][j * 20] = false\n    }\n  }\n\n\n\n\n  let cW\n  let cH\n\n  const gameLogic = (ctx, canvas) => {\n\n    drawSnake(ctx, canvas)\n    drawApple(ctx, canvas)\n\n    console.apple.collision(snake.x, snake.y)\n\n    apple.redraw(snake.x, snake.y)\n\n  }\n  useEffect(() => {\n\n\n      const canvas = cRef.current\n      const ctx = canvas.getContext(\"2d\");\n      cW = canvas.width/2\n      cH = canvas.height/2\n      squares[cW][cH] = true\n\n      // let coords = genRandomXY()\n\n      setStateX(cW)\n      setStateY(cH)\n      setInterval(() => {gameLogic(ctx, canvas)}, 150)\n      window.addEventListener('keydown', logKey, cW, cH);\n      return () => {\n      window.removeEventListener('keydown', logKey, cW, cH);\n  }\n  })\n\n  const logKey = (event) => {\n\n    if (event.code === \"ArrowRight\"){\n      snake.changeDirection(\"right\")\n    }\n    else if (event.code === \"ArrowLeft\"){\n      snake.changeDirection(\"left\")\n    }\n    else if (event.code === \"ArrowUp\" ){\n      snake.changeDirection(\"up\")\n    }\n    else if (event.code === \"ArrowDown\"){\n      snake.changeDirection(\"down\")\n    }\n    else if (event.keyCode === 32){\n      snake.changeDirection(\"pause\")\n    }\n\n  }\n\n  function drawSnake(ctx, canvas) {\n\n\n    const squareSide = 20\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath()\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n    if (snake.hasBody() > 0){\n\n      for (let i = 0; i <= snake.hasBody() - 1; i++){\n        ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n      }\n    }\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n\n}\n\n  function drawApple(ctx, canvas, x, y) {\n\n\n      const appleRadius = 10\n      ctx.beginPath()\n      ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI*2);\n      ctx.fillStyle = \"#D32F2F\";\n      ctx.fill();\n      ctx.closePath();\n\n\n    }\n\n\n\n\n  const cRef = useRef(null)\n  return(\n    <div>\n        <canvas  style={{ background: \"#eee\", display: \"block\", margin: \"0 auto\" }} id=\"myCanvas\" width=\"480\" height=\"320\" ref={cRef}></canvas>\n    </div>\n  )\n})\n\n\nfunction App() {\n\n  const [stateX, setStateX] = useState(240)\n  const [stateY, setStateY] = useState(160)\n\n  return (\n    <div>\n        <Game  setStateX={setStateX} setStateY={setStateY}/>\n        <Position stateX={stateX} stateY={stateY}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}