{"ast":null,"code":"var _jsxFileName = \"/Users/patrickwellins/Desktop/games/snake/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport EventListener, { withOptions } from 'react-event-listener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst genRandomXY = () => {\n  const y = Math.floor(Math.random() * 15);\n  const x = Math.floor(Math.random() * 23);\n  return [x * 20, y * 20];\n};\n\nconst squares = {};\n\nfor (let i = 0; i < 16; i++) {\n  squares[i * 20] = {};\n\n  for (let j = 0; j < 24; j++) {\n    squares[i * 20][j * 20] = [true];\n  }\n}\n\nclass Snake {\n  constructor(x, y, direction) {\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n    this.snakeBody = {\n      0: [this.x, this.y],\n      1: [this.x - 20, this.y],\n      2: [this.x - 40, this.y],\n      3: [this.x - 60, this.y]\n    };\n    this.debugger = [];\n    this.pause = false;\n  }\n\n  changeDirection(direction) {\n    this.direction = direction;\n  }\n\n  getTail() {\n    return this.snakeBody[this.hasBody() - 1];\n  }\n\n  go() {\n    this.pause = false;\n  }\n\n  updatePostion(appleX, appleY) {\n    if (!this.pause) {\n      let tail = this.getTail();\n\n      if (this.hasBody() > 1) {\n        for (let i = this.hasBody() - 1; i >= 1; i--) {\n          this.snakeBody[i] = this.snakeBody[i - 1];\n        }\n      }\n\n      if (this.direction == 'up') {\n        this.y -= 20;\n      } else if (this.direction == 'down') {\n        this.y += 20;\n      } else if (this.direction == 'left') {\n        this.x -= 20;\n      } else if (this.direction == 'right') {\n        this.x += 20;\n      }\n\n      this.snakeBody[0] = [this.x, this.y];\n\n      if (this.x === appleX && this.y === appleY) {\n        this.debugger.push(tail);\n      }\n\n      for (let i = 0; i < 16; i++) {\n        squares[i * 20] = {};\n\n        for (let j = 0; j < 24; j++) {\n          squares[i * 20][j * 20] = [true];\n        }\n      }\n\n      for (let i = 0; i < this.hasBody(); i++) {\n        let temp_x = this.snakeBody[i][0];\n        let temp_y = this.snakeBody[i][0];\n        squares[x][y] = false;\n      }\n    }\n  }\n\n  add() {\n    if (this.debugger.length == 1) {\n      this.snakeBody[this.hasBody()] = this.debugger.pop();\n    }\n  }\n\n  x() {\n    return this.x;\n  }\n\n  y() {\n    return this.y;\n  }\n\n  hasBody() {\n    return Object.keys(this.snakeBody).length;\n  }\n\n  collided() {\n    for (let i = 1; i < this.hasBody(); i++) {\n      let temp_x = this.snakeBody[i][0];\n      let temp_y = this.snakeBody[i][1];\n\n      if (this.x === temp_x && this.y === temp_y) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  p() {\n    this.pause = true;\n  }\n\n  getSnakeCoords() {\n    return Object.values(this.snakeBody);\n  }\n\n}\n\nclass Apple {\n  constructor() {\n    let randCoords = genRandomXY();\n    this.x = randCoords[0];\n    this.y = randCoords[1];\n  }\n\n  collision(snakeX, snakeY) {\n    if (snakeX === this.x && snakeY === this.y) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  redraw(snakeX, snakeY) {\n    if (this.collision(snakeX, snakeY)) {\n      let randCoords = genRandomXY();\n      this.x = randCoords[0];\n      this.y = randCoords[1];\n    }\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n}\n\nconst snake = new Snake(100, 100, 'right');\nconst apple = new Apple();\n\nconst Position = ({\n  stateX,\n  stateY\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"100px\"\n    },\n    children: [\" \", stateX, \" \", stateY, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Position;\nconst Game = /*#__PURE__*/React.memo(_c2 = _s(({\n  setStateX,\n  setStateY\n}) => {\n  _s();\n\n  let dx = 0;\n  let dy = 0;\n  let appleExists = false;\n  let cW;\n  let cH;\n\n  const gameLogic = (ctx, canvas) => {\n    if (!snake.collided()) {\n      drawSnake(ctx, canvas);\n      drawApple(ctx, canvas);\n      let x = apple.getX();\n      let y = apple.getY();\n      snake.updatePostion(x, y);\n      snake.add();\n      apple.redraw(snake.x, snake.y);\n    }\n  };\n\n  useEffect(() => {\n    const canvas = cRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    cW = canvas.width / 2;\n    cH = canvas.height / 2;\n    setStateX(cW);\n    setStateY(cH);\n    setInterval(() => {\n      gameLogic(ctx, canvas);\n    }, 150);\n    window.addEventListener('keydown', logKey, cW, cH);\n    return () => {\n      window.removeEventListener('keydown', logKey, cW, cH);\n    };\n  });\n\n  const logKey = event => {\n    if (event.code === \"ArrowRight\") {\n      snake.changeDirection(\"right\");\n    } else if (event.code === \"ArrowLeft\") {\n      snake.changeDirection(\"left\");\n    } else if (event.code === \"ArrowUp\") {\n      snake.changeDirection(\"up\");\n    } else if (event.code === \"ArrowDown\") {\n      snake.changeDirection(\"down\");\n    } else if (event.keyCode === 32) {\n      snake.p();\n    } else if (event.keyCode === 13) {\n      snake.go();\n    }\n  };\n\n  function drawSnake(ctx, canvas) {\n    const squareSide = 20;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n\n    if (snake.hasBody() > 0) {\n      for (let i = 0; i <= snake.hasBody() - 1; i++) {\n        try {\n          ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n        } catch (e) {//pass\n        } finally {//pass\n        }\n      }\n    }\n\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawApple(ctx, canvas, x, y) {\n    const appleRadius = 10;\n    ctx.beginPath();\n    ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI * 2);\n    ctx.fillStyle = \"#D32F2F\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const cRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        background: \"#eee\",\n        display: \"block\",\n        margin: \"0 auto\"\n      },\n      id: \"myCanvas\",\n      width: \"480\",\n      height: \"320\",\n      ref: cRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}, \"URm58pgjXa+ECeiVHN1N38QXQss=\"));\n_c3 = Game;\n\nfunction App() {\n  _s2();\n\n  const [stateX, setStateX] = useState(240);\n  const [stateY, setStateY] = useState(160);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Game, {\n      setStateX: setStateX,\n      setStateY: setStateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Position, {\n      stateX: stateX,\n      stateY: stateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"z/9Tpgp52heXM9WS/DEC/+/vP/U=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Position\");\n$RefreshReg$(_c2, \"Game$React.memo\");\n$RefreshReg$(_c3, \"Game\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/patrickwellins/Desktop/games/snake/src/App.js"],"names":["React","useState","useEffect","useRef","EventListener","withOptions","genRandomXY","y","Math","floor","random","x","squares","i","j","Snake","constructor","direction","snakeBody","debugger","pause","changeDirection","getTail","hasBody","go","updatePostion","appleX","appleY","tail","push","temp_x","temp_y","add","length","pop","Object","keys","collided","p","getSnakeCoords","values","Apple","randCoords","collision","snakeX","snakeY","redraw","getX","getY","snake","apple","Position","stateX","stateY","marginLeft","Game","memo","setStateX","setStateY","dx","dy","appleExists","cW","cH","gameLogic","ctx","canvas","drawSnake","drawApple","cRef","current","getContext","width","height","setInterval","window","addEventListener","logKey","removeEventListener","event","code","keyCode","squareSide","clearRect","beginPath","rect","e","fillStyle","fill","closePath","appleRadius","arc","PI","background","display","margin","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport EventListener, {withOptions} from 'react-event-listener';\n\nconst genRandomXY = () => {\n\nconst y = Math.floor(Math.random() * 15)\nconst x = Math.floor(Math.random() * 23)\nreturn [x * 20, y * 20]\n}\n\nconst squares = {}\nfor (let i = 0; i < 16; i++){\n  squares[i * 20] = {}\n  for (let j = 0; j < 24; j++){\n    squares[i * 20][j * 20] = [true]\n  }\n}\n\n\n\n\n\nclass Snake {\n  constructor(x, y, direction) {\n    this.x = x\n    this.y = y\n    this.direction = direction\n    this.snakeBody = {0:[this.x , this.y], 1:[this.x - 20, this.y], 2:[this.x - 40, this.y], 3:[this.x - 60, this.y]}\n    this.debugger = []\n    this.pause = false\n  }\n\n\n\n  changeDirection(direction){\n    this.direction = direction\n  }\n\n  getTail(){\n    return this.snakeBody[this.hasBody() - 1]\n  }\n\n  go() {\n    this.pause = false\n  }\n\n  updatePostion(appleX, appleY){\n\n    if (!this.pause){\n\n    let tail = this.getTail()\n\n\n    if (this.hasBody() > 1){\n\n      for (let i = this.hasBody() - 1; i >= 1; i--){\n        this.snakeBody[i] = this.snakeBody[i - 1]\n      }\n  }\n\n\n    if (this.direction == 'up'){\n      this.y -= 20\n    }\n    else if (this.direction == 'down'){\n      this.y += 20\n    }\n    else if (this.direction == 'left'){\n      this.x -= 20\n    }\n    else if (this.direction == 'right'){\n      this.x += 20\n    }\n\n    this.snakeBody[0] = [this.x, this.y]\n\n    if (this.x === appleX && this.y === appleY){\n      this.debugger.push(tail)\n    }\n\n    for (let i = 0; i < 16; i++){\n      squares[i * 20] = {}\n      for (let j = 0; j < 24; j++){\n        squares[i * 20][j * 20] = [true]\n      }\n    }\n\n    for (let i = 0; i < this.hasBody(); i++) {\n        let temp_x = this.snakeBody[i][0]\n        let temp_y = this.snakeBody[i][0]\n        squares[x][y] = false\n    }\n\n\n\n    }\n\n  }\n\n  add(){\n    if (this.debugger.length == 1){\n      this.snakeBody[this.hasBody()] = this.debugger.pop()\n    }\n  }\n\n\n  x(){\n    return this.x\n  }\n\n  y(){\n    return this.y\n  }\n\n  hasBody() {\n    return Object.keys(this.snakeBody).length\n  }\n\n  collided() {\n\n      for (let i = 1; i < this.hasBody(); i++){\n          let temp_x = this.snakeBody[i][0]\n          let temp_y = this.snakeBody[i][1]\n          if (this.x === temp_x && this.y === temp_y){\n            return true\n          }\n      }\n      return false\n  }\n\n  p(){\n    this.pause = true\n  }\n\n  getSnakeCoords(){\n    return Object.values(this.snakeBody)\n  }\n\n\n}\n\nclass Apple {\n\n  constructor() {\n    let randCoords = genRandomXY()\n    this.x = randCoords[0]\n    this.y = randCoords[1]\n  }\n\n  collision(snakeX, snakeY) {\n    if (snakeX === this.x && snakeY === this.y){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  redraw(snakeX, snakeY){\n    if (this.collision(snakeX, snakeY)){\n      let randCoords = genRandomXY()\n      this.x = randCoords[0]\n      this.y = randCoords[1]\n    }\n  }\n\n  getX(){\n    return this.x\n  }\n\n  getY(){\n    return this.y\n  }\n\n}\n\nconst snake = new Snake(100, 100, 'right')\nconst apple = new Apple()\nconst Position = ({stateX, stateY}) => {\n\n  return(\n    <div style={{marginLeft: \"100px\"}}> {stateX} {stateY} </div>\n  )\n}\n\n\n\n\nconst Game = React.memo(({setStateX, setStateY}) => {\n\n  let dx = 0\n  let dy = 0\n\n  let appleExists = false\n\n\n\n\n\n  let cW\n  let cH\n\n  const gameLogic = (ctx, canvas) => {\n\n\n    if (!snake.collided()){\n      drawSnake(ctx, canvas)\n      drawApple(ctx, canvas)\n      let x = apple.getX()\n      let y = apple.getY()\n      snake.updatePostion(x, y)\n      snake.add()\n      apple.redraw(snake.x, snake.y)\n    }\n  }\n\n  useEffect(() => {\n\n\n      const canvas = cRef.current\n      const ctx = canvas.getContext(\"2d\");\n      cW = canvas.width/2\n      cH = canvas.height/2\n\n      setStateX(cW)\n      setStateY(cH)\n      setInterval(() => {gameLogic(ctx, canvas)}, 150)\n      window.addEventListener('keydown', logKey, cW, cH);\n      return () => {\n      window.removeEventListener('keydown', logKey, cW, cH);\n  }\n  })\n\n  const logKey = (event) => {\n\n    if (event.code === \"ArrowRight\"){\n      snake.changeDirection(\"right\")\n    }\n    else if (event.code === \"ArrowLeft\"){\n      snake.changeDirection(\"left\")\n    }\n    else if (event.code === \"ArrowUp\" ){\n      snake.changeDirection(\"up\")\n    }\n    else if (event.code === \"ArrowDown\"){\n      snake.changeDirection(\"down\")\n    }\n    else if (event.keyCode === 32){\n      snake.p()\n    }\n    else if (event.keyCode === 13){\n      snake.go()\n    }\n\n  }\n\n  function drawSnake(ctx, canvas) {\n\n\n    const squareSide = 20\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath()\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n    if (snake.hasBody() > 0){\n\n      for (let i = 0; i <= snake.hasBody() - 1; i++){\n        try {\n            ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n        } catch (e) {\n          //pass\n        } finally {\n          //pass\n        }\n\n      }\n    }\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n\n}\n\n  function drawApple(ctx, canvas, x, y) {\n\n\n      const appleRadius = 10\n      ctx.beginPath()\n      ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI*2);\n      ctx.fillStyle = \"#D32F2F\";\n      ctx.fill();\n      ctx.closePath();\n\n\n    }\n\n\n\n\n  const cRef = useRef(null)\n  return(\n    <div>\n        <canvas  style={{ background: \"#eee\", display: \"block\", margin: \"0 auto\" }} id=\"myCanvas\" width=\"480\" height=\"320\" ref={cRef}></canvas>\n    </div>\n  )\n})\n\n\nfunction App() {\n\n  const [stateX, setStateX] = useState(240)\n  const [stateY, setStateY] = useState(160)\n\n  return (\n    <div>\n        <Game  setStateX={setStateX} setStateY={setStateY}/>\n        <Position stateX={stateX} stateY={stateY}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}