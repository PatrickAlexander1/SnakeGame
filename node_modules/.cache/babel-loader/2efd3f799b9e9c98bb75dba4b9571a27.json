{"ast":null,"code":"var _jsxFileName = \"/Users/patrickwellins/Desktop/games/snake/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport EventListener, { withOptions } from 'react-event-listener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Position = ({\n  stateX,\n  stateY\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"100px\"\n    },\n    children: [\" \", stateX, \" \", stateY, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Position;\nconst Game = /*#__PURE__*/React.memo(_c2 = _s(({\n  setStateX,\n  setStateY,\n  setRestart,\n  x,\n  setX\n}) => {\n  _s();\n\n  const [newGame, setNewGame] = useState(false);\n  const snakes = [new Snake(100, 100, 'right')];\n  let snake = snakes[0];\n\n  const genRandomXY = snakeBody => {\n    const y = Math.floor(Math.random() * 15) * 20;\n    const x = Math.floor(Math.random() * 23) * 20;\n    let recurse = false;\n\n    for (let i = 0; i < snakeBody.length; i++) {\n      const temp_x = snakeBody[i][0];\n      const temp_y = snakeBody[i][1];\n\n      if (x === temp_x && y === temp_y) {\n        recurse = true;\n      }\n    }\n\n    if (recurse) {\n      return genRandomXY(snakeBody);\n    } else {\n      return [x, y];\n    }\n  };\n\n  class Snake {\n    constructor(x, y, direction) {\n      this.x = x;\n      this.y = y;\n      this.direction = direction;\n      this.snakeBody = {\n        0: [this.x, this.y],\n        1: [this.x - 20, this.y],\n        2: [this.x - 40, this.y],\n        3: [this.x - 60, this.y]\n      };\n      this.debugger = [];\n      this.pause = false;\n    }\n\n    changeDirection(direction) {\n      this.direction = direction;\n    }\n\n    getTail() {\n      return this.snakeBody[this.snakeLength() - 1];\n    }\n\n    go() {\n      this.pause = false;\n    }\n\n    updatePostion(appleX, appleY) {\n      if (!this.pause) {\n        const tail = this.getTail();\n\n        if (this.snakeLength() > 1) {\n          for (let i = this.snakeLength() - 1; i >= 1; i--) {\n            this.snakeBody[i] = this.snakeBody[i - 1];\n          }\n        }\n\n        if (this.direction === 'up') {\n          this.y -= 20;\n        } else if (this.direction === 'down') {\n          this.y += 20;\n        } else if (this.direction === 'left') {\n          this.x -= 20;\n        } else if (this.direction === 'right') {\n          this.x += 20;\n        }\n\n        this.snakeBody[0] = [this.x, this.y];\n\n        if (this.x === appleX && this.y === appleY) {\n          this.debugger.push(tail);\n        }\n      }\n    }\n\n    add() {\n      if (this.debugger.length === 1) {\n        this.snakeBody[this.snakeLength()] = this.debugger.pop();\n      }\n    }\n\n    snakeLength() {\n      return Object.keys(this.snakeBody).length;\n    }\n\n    collided() {\n      for (let i = 1; i < this.snakeLength(); i++) {\n        const temp_x = this.snakeBody[i][0];\n        const temp_y = this.snakeBody[i][1];\n\n        if (this.x === temp_x && this.y === temp_y) {\n          return true;\n        }\n      }\n\n      if (this.y > 300 || this.y < 0 || this.x < 0 || this.x > 460) {\n        return true;\n      }\n\n      return false;\n    }\n\n    p() {\n      this.pause = true;\n    }\n\n    getSnakeCoords() {\n      return Object.values(this.snakeBody);\n    }\n\n    resetSnake() {\n      this.x = 100;\n      this.y = 100;\n    }\n\n  }\n\n  class Apple {\n    constructor() {\n      const randCoords = genRandomXY(snake.getSnakeCoords());\n      this.x = randCoords[0];\n      this.y = randCoords[1];\n    }\n\n    collision(snakeX, snakeY) {\n      if (snakeX === this.x && snakeY === this.y) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    redraw(snakeX, snakeY) {\n      if (this.collision(snakeX, snakeY)) {\n        const randCoords = genRandomXY(snake.getSnakeCoords());\n        this.x = randCoords[0];\n        this.y = randCoords[1];\n      }\n    }\n\n    getX() {\n      return this.x;\n    }\n\n    getY() {\n      return this.y;\n    }\n\n  }\n\n  let cW;\n  let cH;\n  let apple = new Apple();\n  useEffect(() => {\n    const canvas = cRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    cW = canvas.width / 2;\n    cH = canvas.height / 2;\n\n    const gameLogic = (ctx, canvas) => {\n      let x_ = snake.x;\n      let y_ = snake.y;\n      console.log(x_, y_);\n      const c = snake.collided();\n\n      if (!c) {\n        drawSnake(ctx, canvas);\n        drawApple(ctx, canvas);\n        const x = apple.getX();\n        const y = apple.getY();\n        snake.updatePostion(x, y);\n        snake.add();\n        apple.redraw(snake.x, snake.y);\n        setStateX(snake.x);\n        setStateY(snake.y);\n      } else if (c) {\n        snake.p();\n        setRestart(true);\n      }\n    };\n\n    let int = setInterval(() => {\n      gameLogic(ctx, canvas);\n    }, 150);\n\n    if (x) {\n      clearInterval(int);\n      setX(false);\n    }\n\n    window.addEventListener('keydown', logKey, cW, cH);\n    return () => {\n      window.removeEventListener('keydown', logKey, cW, cH);\n    };\n  }, [x]);\n\n  const logKey = event => {\n    if (event.code === \"ArrowRight\") {\n      snake.changeDirection(\"right\");\n    } else if (event.code === \"ArrowLeft\") {\n      snake.changeDirection(\"left\");\n    } else if (event.code === \"ArrowUp\") {\n      snake.changeDirection(\"up\");\n    } else if (event.code === \"ArrowDown\") {\n      snake.changeDirection(\"down\");\n    } else if (event.keyCode === 32) {\n      snake.p();\n    } else if (event.keyCode === 13) {\n      snake.go();\n    }\n  };\n\n  function drawSnake(ctx, canvas) {\n    const squareSide = 20;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n\n    if (snake.snakeLength() > 0) {\n      for (let i = 0; i <= snake.snakeLength() - 1; i++) {\n        ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n      }\n    }\n\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawApple(ctx, canvas, x, y) {\n    const appleRadius = 10;\n    ctx.beginPath();\n    ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI * 2);\n    ctx.fillStyle = \"#D32F2F\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const cRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: \"'Press Start 2P', cursive\",\n        textAlign: \"center\"\n      },\n      children: \" Snake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        background: \"#262626\",\n        display: \"block\",\n        margin: \"0 auto\"\n      },\n      id: \"myCanvas\",\n      width: \"480\",\n      height: \"320\",\n      ref: cRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}, \"unpCDqkRiv8IF6lifD1Uy6dNVEA=\"));\n_c3 = Game;\n\nfunction App() {\n  _s2();\n\n  const [stateX, setStateX] = useState(240);\n  const [stateY, setStateY] = useState(160);\n  const [restart, setRestart] = useState(false);\n  const [x, setX] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Game, {\n      setX: setX,\n      x: x,\n      setRestart: setRestart,\n      setStateX: setStateX,\n      setStateY: setStateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Position, {\n      stateX: stateX,\n      stateY: stateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), restart && /*#__PURE__*/_jsxDEV(\"h4\", {\n      onClick: () => {\n        setRestart(false);\n        setX(true);\n      },\n      style: {\n        fontFamily: \"'Press Start 2P', cursive\",\n        textAlign: \"center\"\n      },\n      children: \" New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"hEgfNN5jhit8guQgXAc7ANvMoYM=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Position\");\n$RefreshReg$(_c2, \"Game$React.memo\");\n$RefreshReg$(_c3, \"Game\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/patrickwellins/Desktop/games/snake/src/App.js"],"names":["React","useState","useEffect","useRef","EventListener","withOptions","Position","stateX","stateY","marginLeft","Game","memo","setStateX","setStateY","setRestart","x","setX","newGame","setNewGame","snakes","Snake","snake","genRandomXY","snakeBody","y","Math","floor","random","recurse","i","length","temp_x","temp_y","constructor","direction","debugger","pause","changeDirection","getTail","snakeLength","go","updatePostion","appleX","appleY","tail","push","add","pop","Object","keys","collided","p","getSnakeCoords","values","resetSnake","Apple","randCoords","collision","snakeX","snakeY","redraw","getX","getY","cW","cH","apple","canvas","cRef","current","ctx","getContext","width","height","gameLogic","x_","y_","console","log","c","drawSnake","drawApple","int","setInterval","clearInterval","window","addEventListener","logKey","removeEventListener","event","code","keyCode","squareSide","clearRect","beginPath","rect","fillStyle","fill","closePath","appleRadius","arc","PI","fontFamily","textAlign","background","display","margin","App","restart"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,aAAP,IAAuBC,WAAvB,QAAyC,sBAAzC;;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAErC,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA,oBAAqCF,MAArC,OAA8CC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CALD;;KAAMF,Q;AAUN,MAAMI,IAAI,gBAAGV,KAAK,CAACW,IAAN,UAAW,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA,CAAnC;AAAsCC,EAAAA;AAAtC,CAAD,KAAiD;AAAA;;AAGvE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMkB,MAAM,GAAG,CAAC,IAAIC,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,OAApB,CAAD,CAAf;AACA,MAAIC,KAAK,GAAGF,MAAM,CAAC,CAAD,CAAlB;;AAEA,QAAMG,WAAW,GAAIC,SAAD,IAAe;AAE/B,UAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAA3C;AACA,UAAMZ,CAAC,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAA3C;AACA,QAAIC,OAAO,GAAG,KAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAAS,CAACO,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACxC,YAAME,MAAM,GAAGR,SAAS,CAACM,CAAD,CAAT,CAAa,CAAb,CAAf;AACA,YAAMG,MAAM,GAAGT,SAAS,CAACM,CAAD,CAAT,CAAa,CAAb,CAAf;;AACA,UAAId,CAAC,KAAKgB,MAAN,IAAgBP,CAAC,KAAKQ,MAA1B,EAAiC;AAC/BJ,QAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACD,QAAIA,OAAJ,EAAY;AACV,aAAON,WAAW,CAACC,SAAD,CAAlB;AACD,KAFD,MAGI;AACF,aAAO,CAACR,CAAD,EAAIS,CAAJ,CAAP;AACD;AACJ,GAlBD;;AAoBA,QAAMJ,KAAN,CAAY;AAEVa,IAAAA,WAAW,CAAClB,CAAD,EAAIS,CAAJ,EAAOU,SAAP,EAAkB;AAC3B,WAAKnB,CAAL,GAASA,CAAT;AACA,WAAKS,CAAL,GAASA,CAAT;AACA,WAAKU,SAAL,GAAiBA,SAAjB;AACA,WAAKX,SAAL,GAAiB;AAAC,WAAE,CAAC,KAAKR,CAAN,EAAU,KAAKS,CAAf,CAAH;AAAsB,WAAE,CAAC,KAAKT,CAAL,GAAS,EAAV,EAAc,KAAKS,CAAnB,CAAxB;AAA+C,WAAE,CAAC,KAAKT,CAAL,GAAS,EAAV,EAAc,KAAKS,CAAnB,CAAjD;AAAwE,WAAE,CAAC,KAAKT,CAAL,GAAS,EAAV,EAAc,KAAKS,CAAnB;AAA1E,OAAjB;AACA,WAAKW,QAAL,GAAgB,EAAhB;AACA,WAAKC,KAAL,GAAa,KAAb;AACD;;AAEDC,IAAAA,eAAe,CAACH,SAAD,EAAW;AACxB,WAAKA,SAAL,GAAiBA,SAAjB;AACD;;AAEDI,IAAAA,OAAO,GAAE;AACP,aAAO,KAAKf,SAAL,CAAe,KAAKgB,WAAL,KAAqB,CAApC,CAAP;AACD;;AAEDC,IAAAA,EAAE,GAAG;AACH,WAAKJ,KAAL,GAAa,KAAb;AACD;;AAEDK,IAAAA,aAAa,CAACC,MAAD,EAASC,MAAT,EAAgB;AAE3B,UAAI,CAAC,KAAKP,KAAV,EAAgB;AACd,cAAMQ,IAAI,GAAG,KAAKN,OAAL,EAAb;;AACA,YAAI,KAAKC,WAAL,KAAqB,CAAzB,EAA2B;AAE3B,eAAK,IAAIV,CAAC,GAAG,KAAKU,WAAL,KAAqB,CAAlC,EAAqCV,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAiD;AAC/C,iBAAKN,SAAL,CAAeM,CAAf,IAAoB,KAAKN,SAAL,CAAeM,CAAC,GAAG,CAAnB,CAApB;AACD;AACJ;;AAGC,YAAI,KAAKK,SAAL,KAAmB,IAAvB,EAA4B;AAC1B,eAAKV,CAAL,IAAU,EAAV;AACD,SAFD,MAGK,IAAI,KAAKU,SAAL,KAAmB,MAAvB,EAA8B;AACjC,eAAKV,CAAL,IAAU,EAAV;AACD,SAFI,MAGA,IAAI,KAAKU,SAAL,KAAmB,MAAvB,EAA8B;AACjC,eAAKnB,CAAL,IAAU,EAAV;AACD,SAFI,MAGA,IAAI,KAAKmB,SAAL,KAAmB,OAAvB,EAA+B;AAClC,eAAKnB,CAAL,IAAU,EAAV;AACD;;AAED,aAAKQ,SAAL,CAAe,CAAf,IAAoB,CAAC,KAAKR,CAAN,EAAS,KAAKS,CAAd,CAApB;;AAEA,YAAI,KAAKT,CAAL,KAAW2B,MAAX,IAAqB,KAAKlB,CAAL,KAAWmB,MAApC,EAA2C;AACzC,eAAKR,QAAL,CAAcU,IAAd,CAAmBD,IAAnB;AACD;AAAC;AACH;;AAEDE,IAAAA,GAAG,GAAE;AACH,UAAI,KAAKX,QAAL,CAAcL,MAAd,KAAyB,CAA7B,EAA+B;AAC7B,aAAKP,SAAL,CAAe,KAAKgB,WAAL,EAAf,IAAqC,KAAKJ,QAAL,CAAcY,GAAd,EAArC;AACD;AACF;;AAGDR,IAAAA,WAAW,GAAG;AACZ,aAAOS,MAAM,CAACC,IAAP,CAAY,KAAK1B,SAAjB,EAA4BO,MAAnC;AACD;;AAEDoB,IAAAA,QAAQ,GAAG;AAEP,WAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKU,WAAL,EAApB,EAAwCV,CAAC,EAAzC,EAA4C;AACxC,cAAME,MAAM,GAAG,KAAKR,SAAL,CAAeM,CAAf,EAAkB,CAAlB,CAAf;AACA,cAAMG,MAAM,GAAG,KAAKT,SAAL,CAAeM,CAAf,EAAkB,CAAlB,CAAf;;AACA,YAAI,KAAKd,CAAL,KAAWgB,MAAX,IAAqB,KAAKP,CAAL,KAAWQ,MAApC,EAA2C;AACzC,iBAAO,IAAP;AACD;AACJ;;AACD,UAAI,KAAKR,CAAL,GAAS,GAAT,IAAgB,KAAKA,CAAL,GAAS,CAAzB,IAA8B,KAAKT,CAAL,GAAS,CAAvC,IAA4C,KAAKA,CAAL,GAAS,GAAzD,EAA6D;AAC3D,eAAO,IAAP;AAED;;AACD,aAAO,KAAP;AACH;;AAEDoC,IAAAA,CAAC,GAAE;AACD,WAAKf,KAAL,GAAa,IAAb;AACD;;AAEDgB,IAAAA,cAAc,GAAE;AACd,aAAOJ,MAAM,CAACK,MAAP,CAAc,KAAK9B,SAAnB,CAAP;AACD;;AAED+B,IAAAA,UAAU,GAAG;AACT,WAAKvC,CAAL,GAAS,GAAT;AACA,WAAKS,CAAL,GAAS,GAAT;AACH;;AA7FS;;AAkGZ,QAAM+B,KAAN,CAAY;AAEVtB,IAAAA,WAAW,GAAG;AACZ,YAAMuB,UAAU,GAAGlC,WAAW,CAACD,KAAK,CAAC+B,cAAN,EAAD,CAA9B;AACA,WAAKrC,CAAL,GAASyC,UAAU,CAAC,CAAD,CAAnB;AACA,WAAKhC,CAAL,GAASgC,UAAU,CAAC,CAAD,CAAnB;AACD;;AAEDC,IAAAA,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiB;AACxB,UAAID,MAAM,KAAK,KAAK3C,CAAhB,IAAqB4C,MAAM,KAAK,KAAKnC,CAAzC,EAA2C;AACzC,eAAO,IAAP;AACD,OAFD,MAGI;AACF,eAAO,KAAP;AACD;AACF;;AAEDoC,IAAAA,MAAM,CAACF,MAAD,EAASC,MAAT,EAAgB;AACpB,UAAI,KAAKF,SAAL,CAAeC,MAAf,EAAuBC,MAAvB,CAAJ,EAAmC;AACjC,cAAMH,UAAU,GAAGlC,WAAW,CAACD,KAAK,CAAC+B,cAAN,EAAD,CAA9B;AACA,aAAKrC,CAAL,GAASyC,UAAU,CAAC,CAAD,CAAnB;AACA,aAAKhC,CAAL,GAASgC,UAAU,CAAC,CAAD,CAAnB;AACD;AACF;;AAEDK,IAAAA,IAAI,GAAE;AACJ,aAAO,KAAK9C,CAAZ;AACD;;AAED+C,IAAAA,IAAI,GAAE;AACJ,aAAO,KAAKtC,CAAZ;AACD;;AA/BS;;AAqCZ,MAAIuC,EAAJ;AACA,MAAIC,EAAJ;AAEA,MAAIC,KAAK,GAAG,IAAIV,KAAJ,EAAZ;AAGArD,EAAAA,SAAS,CAAC,MAAM;AAGZ,UAAMgE,MAAM,GAAGC,IAAI,CAACC,OAApB;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACAP,IAAAA,EAAE,GAAGG,MAAM,CAACK,KAAP,GAAa,CAAlB;AACAP,IAAAA,EAAE,GAAGE,MAAM,CAACM,MAAP,GAAc,CAAnB;;AAEA,UAAMC,SAAS,GAAG,CAACJ,GAAD,EAAMH,MAAN,KAAiB;AAEjC,UAAIQ,EAAE,GAAGrD,KAAK,CAACN,CAAf;AACA,UAAI4D,EAAE,GAAGtD,KAAK,CAACG,CAAf;AACAoD,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBC,EAAhB;AACA,YAAMG,CAAC,GAAGzD,KAAK,CAAC6B,QAAN,EAAV;;AAEA,UAAI,CAAC4B,CAAL,EAAO;AACLC,QAAAA,SAAS,CAACV,GAAD,EAAMH,MAAN,CAAT;AACAc,QAAAA,SAAS,CAACX,GAAD,EAAMH,MAAN,CAAT;AACA,cAAMnD,CAAC,GAAGkD,KAAK,CAACJ,IAAN,EAAV;AACA,cAAMrC,CAAC,GAAGyC,KAAK,CAACH,IAAN,EAAV;AACAzC,QAAAA,KAAK,CAACoB,aAAN,CAAoB1B,CAApB,EAAuBS,CAAvB;AACAH,QAAAA,KAAK,CAACyB,GAAN;AACAmB,QAAAA,KAAK,CAACL,MAAN,CAAavC,KAAK,CAACN,CAAnB,EAAsBM,KAAK,CAACG,CAA5B;AACAZ,QAAAA,SAAS,CAACS,KAAK,CAACN,CAAP,CAAT;AACAF,QAAAA,SAAS,CAACQ,KAAK,CAACG,CAAP,CAAT;AAED,OAXD,MAYK,IAAIsD,CAAJ,EAAM;AACPzD,QAAAA,KAAK,CAAC8B,CAAN;AACArC,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACF,KAvBD;;AA0BA,QAAImE,GAAG,GAAGC,WAAW,CAAC,MAAM;AAACT,MAAAA,SAAS,CAACJ,GAAD,EAAMH,MAAN,CAAT;AAAuB,KAA/B,EAAiC,GAAjC,CAArB;;AAEA,QAAInD,CAAJ,EAAM;AACJoE,MAAAA,aAAa,CAACF,GAAD,CAAb;AACAjE,MAAAA,IAAI,CAAC,KAAD,CAAJ;AACD;;AACDoE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,MAAnC,EAA2CvB,EAA3C,EAA+CC,EAA/C;AACA,WAAO,MAAM;AACboB,MAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsCD,MAAtC,EAA8CvB,EAA9C,EAAkDC,EAAlD;AACH,KAFG;AAGL,GA5CU,EA4CT,CAACjD,CAAD,CA5CS,CAAT;;AA8CA,QAAMuE,MAAM,GAAIE,KAAD,IAAW;AAExB,QAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAgC;AAC9BpE,MAAAA,KAAK,CAACgB,eAAN,CAAsB,OAAtB;AACD,KAFD,MAGK,IAAImD,KAAK,CAACC,IAAN,KAAe,WAAnB,EAA+B;AAClCpE,MAAAA,KAAK,CAACgB,eAAN,CAAsB,MAAtB;AACD,KAFI,MAGA,IAAImD,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACjCpE,MAAAA,KAAK,CAACgB,eAAN,CAAsB,IAAtB;AACD,KAFI,MAGA,IAAImD,KAAK,CAACC,IAAN,KAAe,WAAnB,EAA+B;AAClCpE,MAAAA,KAAK,CAACgB,eAAN,CAAsB,MAAtB;AACD,KAFI,MAGA,IAAImD,KAAK,CAACE,OAAN,KAAkB,EAAtB,EAAyB;AAC5BrE,MAAAA,KAAK,CAAC8B,CAAN;AACD,KAFI,MAGA,IAAIqC,KAAK,CAACE,OAAN,KAAkB,EAAtB,EAAyB;AAC5BrE,MAAAA,KAAK,CAACmB,EAAN;AACD;AAEF,GArBD;;AAuBA,WAASuC,SAAT,CAAmBV,GAAnB,EAAwBH,MAAxB,EAAgC;AAG9B,UAAMyB,UAAU,GAAG,EAAnB;AACAtB,IAAAA,GAAG,CAACuB,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB1B,MAAM,CAACK,KAA3B,EAAkCL,MAAM,CAACM,MAAzC;AACAH,IAAAA,GAAG,CAACwB,SAAJ;AACAxB,IAAAA,GAAG,CAACyB,IAAJ,CAASzE,KAAK,CAACN,CAAf,EAAkBM,KAAK,CAACG,CAAxB,EAA2BmE,UAA3B,EAAuCA,UAAvC;;AACA,QAAItE,KAAK,CAACkB,WAAN,KAAsB,CAA1B,EAA4B;AAE1B,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,KAAK,CAACkB,WAAN,KAAsB,CAA3C,EAA8CV,CAAC,EAA/C,EAAkD;AAE9CwC,QAAAA,GAAG,CAACyB,IAAJ,CAASzE,KAAK,CAACE,SAAN,CAAgBM,CAAhB,EAAmB,CAAnB,CAAT,EAAgCR,KAAK,CAACE,SAAN,CAAgBM,CAAhB,EAAmB,CAAnB,CAAhC,EAAuD8D,UAAvD,EAAmEA,UAAnE;AAGH;AACF;;AACDtB,IAAAA,GAAG,CAAC0B,SAAJ,GAAgB,SAAhB;AACA1B,IAAAA,GAAG,CAAC2B,IAAJ;AACA3B,IAAAA,GAAG,CAAC4B,SAAJ;AAEH;;AAEC,WAASjB,SAAT,CAAmBX,GAAnB,EAAwBH,MAAxB,EAAgCnD,CAAhC,EAAmCS,CAAnC,EAAsC;AAGlC,UAAM0E,WAAW,GAAG,EAApB;AACA7B,IAAAA,GAAG,CAACwB,SAAJ;AACAxB,IAAAA,GAAG,CAAC8B,GAAJ,CAAQlC,KAAK,CAACJ,IAAN,KAAeqC,WAAvB,EAAoCjC,KAAK,CAACH,IAAN,KAAeoC,WAAnD,EAAgEA,WAAhE,EAA6E,CAA7E,EAAgFzE,IAAI,CAAC2E,EAAL,GAAQ,CAAxF;AACA/B,IAAAA,GAAG,CAAC0B,SAAJ,GAAgB,SAAhB;AACA1B,IAAAA,GAAG,CAAC2B,IAAJ;AACA3B,IAAAA,GAAG,CAAC4B,SAAJ;AAGD;;AAKH,QAAM9B,IAAI,GAAGhE,MAAM,CAAC,IAAD,CAAnB;AAEA,sBACE;AAAA,4BACI;AAAI,MAAA,KAAK,EAAG;AAACkG,QAAAA,UAAU,EAAE,2BAAb;AAA0CC,QAAAA,SAAS,EAAE;AAArD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,SAAd;AAAyBC,QAAAA,OAAO,EAAE,OAAlC;AAA2CC,QAAAA,MAAM,EAAE;AAAnD,OAAhB;AAA+E,MAAA,EAAE,EAAC,UAAlF;AAA6F,MAAA,KAAK,EAAC,KAAnG;AAAyG,MAAA,MAAM,EAAC,KAAhH;AAAsH,MAAA,GAAG,EAAEtC;AAA3H;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3RY,kCAAb;MAAMzD,I;;AA8RN,SAASgG,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACnG,MAAD,EAASK,SAAT,IAAsBX,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASK,SAAT,IAAsBZ,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAAC0G,OAAD,EAAU7F,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,CAAD,EAAIC,IAAJ,IAAYf,QAAQ,CAAC,KAAD,CAA1B;AAGA,sBACE;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAGe,IAAb;AAAmB,MAAA,CAAC,EAAED,CAAtB;AAAyB,MAAA,UAAU,EAAGD,UAAtC;AAAkD,MAAA,SAAS,EAAEF,SAA7D;AAAwE,MAAA,SAAS,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEN,MAAlB;AAA0B,MAAA,MAAM,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKmG,OAAO,iBAAM;AAAI,MAAA,OAAO,EAAE,MAAM;AAAC7F,QAAAA,UAAU,CAAC,KAAD,CAAV;AAAmBE,QAAAA,IAAI,CAAC,IAAD,CAAJ;AAAW,OAAlD;AAAoD,MAAA,KAAK,EAAG;AAACqF,QAAAA,UAAU,EAAE,2BAAb;AAA0CC,QAAAA,SAAS,EAAE;AAArD,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;IAhBQI,G;;MAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport EventListener, {withOptions} from 'react-event-listener';\n\n\n\nconst Position = ({stateX, stateY}) => {\n\n  return(\n    <div style={{marginLeft: \"100px\"}}> {stateX} {stateY} </div>\n  )\n}\n\n\n\n\nconst Game = React.memo(({setStateX, setStateY, setRestart, x, setX}) => {\n\n\n  const [newGame, setNewGame] = useState(false)\n  const snakes = [new Snake(100, 100, 'right')]\n  let snake = snakes[0]\n\n  const genRandomXY = (snakeBody) => {\n\n      const y = Math.floor(Math.random() * 15) * 20\n      const x = Math.floor(Math.random() * 23) * 20\n      let recurse = false\n      for (let i = 0; i < snakeBody.length; i++){\n        const temp_x = snakeBody[i][0]\n        const temp_y = snakeBody[i][1]\n        if (x === temp_x && y === temp_y){\n          recurse = true\n        }\n      }\n      if (recurse){\n        return genRandomXY(snakeBody)\n      }\n      else{\n        return [x, y]\n      }\n  }\n\n  class Snake {\n\n    constructor(x, y, direction) {\n      this.x = x\n      this.y = y\n      this.direction = direction\n      this.snakeBody = {0:[this.x , this.y], 1:[this.x - 20, this.y], 2:[this.x - 40, this.y], 3:[this.x - 60, this.y]}\n      this.debugger = []\n      this.pause = false\n    }\n\n    changeDirection(direction){\n      this.direction = direction\n    }\n\n    getTail(){\n      return this.snakeBody[this.snakeLength() - 1]\n    }\n\n    go() {\n      this.pause = false\n    }\n\n    updatePostion(appleX, appleY){\n\n      if (!this.pause){\n        const tail = this.getTail()\n        if (this.snakeLength() > 1){\n\n        for (let i = this.snakeLength() - 1; i >= 1; i--){\n          this.snakeBody[i] = this.snakeBody[i - 1]\n        }\n    }\n\n\n      if (this.direction === 'up'){\n        this.y -= 20\n      }\n      else if (this.direction === 'down'){\n        this.y += 20\n      }\n      else if (this.direction === 'left'){\n        this.x -= 20\n      }\n      else if (this.direction === 'right'){\n        this.x += 20\n      }\n\n      this.snakeBody[0] = [this.x, this.y]\n\n      if (this.x === appleX && this.y === appleY){\n        this.debugger.push(tail)\n      }}\n    }\n\n    add(){\n      if (this.debugger.length === 1){\n        this.snakeBody[this.snakeLength()] = this.debugger.pop()\n      }\n    }\n\n\n    snakeLength() {\n      return Object.keys(this.snakeBody).length\n    }\n\n    collided() {\n\n        for (let i = 1; i < this.snakeLength(); i++){\n            const temp_x = this.snakeBody[i][0]\n            const temp_y = this.snakeBody[i][1]\n            if (this.x === temp_x && this.y === temp_y){\n              return true\n            }\n        }\n        if (this.y > 300 || this.y < 0 || this.x < 0 || this.x > 460){\n          return true\n\n        }\n        return false\n    }\n\n    p(){\n      this.pause = true\n    }\n\n    getSnakeCoords(){\n      return Object.values(this.snakeBody)\n    }\n\n    resetSnake() {\n        this.x = 100\n        this.y = 100\n    }\n\n\n  }\n\n  class Apple {\n\n    constructor() {\n      const randCoords = genRandomXY(snake.getSnakeCoords())\n      this.x = randCoords[0]\n      this.y = randCoords[1]\n    }\n\n    collision(snakeX, snakeY) {\n      if (snakeX === this.x && snakeY === this.y){\n        return true\n      }\n      else{\n        return false\n      }\n    }\n\n    redraw(snakeX, snakeY){\n      if (this.collision(snakeX, snakeY)){\n        const randCoords = genRandomXY(snake.getSnakeCoords())\n        this.x = randCoords[0]\n        this.y = randCoords[1]\n      }\n    }\n\n    getX(){\n      return this.x\n    }\n\n    getY(){\n      return this.y\n    }\n\n  }\n\n\n\n  let cW\n  let cH\n\n  let apple = new Apple()\n\n\n  useEffect(() => {\n\n\n      const canvas = cRef.current\n      const ctx = canvas.getContext(\"2d\");\n      cW = canvas.width/2\n      cH = canvas.height/2\n\n      const gameLogic = (ctx, canvas) => {\n\n        let x_ = snake.x\n        let y_ = snake.y\n        console.log(x_, y_)\n        const c = snake.collided()\n\n        if (!c){\n          drawSnake(ctx, canvas)\n          drawApple(ctx, canvas)\n          const x = apple.getX()\n          const y = apple.getY()\n          snake.updatePostion(x, y)\n          snake.add()\n          apple.redraw(snake.x, snake.y)\n          setStateX(snake.x)\n          setStateY(snake.y)\n\n        }\n        else if (c){\n            snake.p()\n            setRestart(true)\n        }\n      }\n\n\n      let int = setInterval(() => {gameLogic(ctx, canvas)}, 150)\n\n      if (x){\n        clearInterval(int)\n        setX(false)\n      }\n      window.addEventListener('keydown', logKey, cW, cH);\n      return () => {\n      window.removeEventListener('keydown', logKey, cW, cH);\n  }\n},[x])\n\n  const logKey = (event) => {\n\n    if (event.code === \"ArrowRight\"){\n      snake.changeDirection(\"right\")\n    }\n    else if (event.code === \"ArrowLeft\"){\n      snake.changeDirection(\"left\")\n    }\n    else if (event.code === \"ArrowUp\" ){\n      snake.changeDirection(\"up\")\n    }\n    else if (event.code === \"ArrowDown\"){\n      snake.changeDirection(\"down\")\n    }\n    else if (event.keyCode === 32){\n      snake.p()\n    }\n    else if (event.keyCode === 13){\n      snake.go()\n    }\n\n  }\n\n  function drawSnake(ctx, canvas) {\n\n\n    const squareSide = 20\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath()\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n    if (snake.snakeLength() > 0){\n\n      for (let i = 0; i <= snake.snakeLength() - 1; i++){\n\n          ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n\n\n      }\n    }\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n\n}\n\n  function drawApple(ctx, canvas, x, y) {\n\n\n      const appleRadius = 10\n      ctx.beginPath()\n      ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI*2);\n      ctx.fillStyle = \"#D32F2F\";\n      ctx.fill();\n      ctx.closePath();\n\n\n    }\n\n\n\n\n  const cRef = useRef(null)\n\n  return(\n    <div>\n        <h1 style ={{fontFamily: \"'Press Start 2P', cursive\", textAlign: \"center\"}}> Snake</h1>\n        <canvas  style={{ background: \"#262626\", display: \"block\", margin: \"0 auto\" }} id=\"myCanvas\" width=\"480\" height=\"320\" ref={cRef}></canvas>\n    </div>\n  )\n})\n\n\nfunction App() {\n\n  const [stateX, setStateX] = useState(240)\n  const [stateY, setStateY] = useState(160)\n  const [restart, setRestart] = useState(false)\n  const [x, setX] = useState(false)\n\n\n  return (\n    <div>\n        <Game setX ={setX} x={x} setRestart ={setRestart} setStateX={setStateX} setStateY={setStateY}/>\n        <Position stateX={stateX} stateY={stateY}/>\n        {restart &&   <h4 onClick={() => {setRestart(false); setX(true)}} style ={{fontFamily: \"'Press Start 2P', cursive\", textAlign: \"center\"}}> New Game</h4>}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}