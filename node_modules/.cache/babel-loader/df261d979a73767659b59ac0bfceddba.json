{"ast":null,"code":"var _jsxFileName = \"/Users/patrickwellins/Documents/games/snake/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Snake {\n  constructor(x, y, direction) {\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n    this.snakeBody = {\n      0: [this.x, this.y],\n      1: [this.x - 20, this.y],\n      2: [this.x - 40, this.y],\n      3: [this.x - 60, this.y]\n    };\n    this.debugger = [];\n    this.pause = false;\n  }\n\n  changeDirection(direction) {\n    this.direction = direction;\n  }\n\n  getTail() {\n    return this.snakeBody[this.snakeLength() - 1];\n  }\n\n  go() {\n    this.pause = false;\n  }\n\n  updatePostion(appleX, appleY) {\n    if (!this.pause) {\n      const tail = this.getTail();\n\n      if (this.snakeLength() > 1) {\n        for (let i = this.snakeLength() - 1; i >= 1; i--) {\n          this.snakeBody[i] = this.snakeBody[i - 1];\n        }\n      }\n\n      if (this.direction === 'up') {\n        this.y -= 20;\n      } else if (this.direction === 'down') {\n        this.y += 20;\n      } else if (this.direction === 'left') {\n        this.x -= 20;\n      } else if (this.direction === 'right') {\n        this.x += 20;\n      }\n\n      this.snakeBody[0] = [this.x, this.y];\n\n      if (this.x === appleX && this.y === appleY) {\n        this.debugger.push(tail);\n      }\n    }\n  }\n\n  add() {\n    if (this.debugger.length === 1) {\n      this.snakeBody[this.snakeLength()] = this.debugger.pop();\n    }\n  }\n\n  snakeLength() {\n    return Object.keys(this.snakeBody).length;\n  }\n\n  collided() {\n    for (let i = 1; i < this.snakeLength(); i++) {\n      const temp_x = this.snakeBody[i][0];\n      const temp_y = this.snakeBody[i][1];\n\n      if (this.x === temp_x && this.y === temp_y) {\n        return true;\n      }\n    }\n\n    if (this.y > 300 || this.y < 0 || this.x < 0 || this.x > 460) {\n      return true;\n    }\n\n    return false;\n  }\n\n  p() {\n    this.pause = true;\n  }\n\n  getSnakeCoords() {\n    return Object.values(this.snakeBody);\n  }\n\n  resetSnake() {\n    this.x = 100;\n    this.y = 100;\n    this.snakeBody = {\n      0: [this.x, this.y],\n      1: [this.x - 20, this.y],\n      2: [this.x - 40, this.y],\n      3: [this.x - 60, this.y]\n    };\n  }\n\n}\n\nclass Apple {\n  constructor() {\n    const randCoords = genRandomXY(snake.getSnakeCoords());\n    this.x = randCoords[0];\n    this.y = randCoords[1];\n  }\n\n  collision(snakeX, snakeY) {\n    if (snakeX === this.x && snakeY === this.y) {\n      localScore += 1;\n      setScore(localScore);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  redraw(snakeX, snakeY) {\n    if (this.collision(snakeX, snakeY)) {\n      const randCoords = genRandomXY(snake.getSnakeCoords());\n      this.x = randCoords[0];\n      this.y = randCoords[1];\n    }\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n}\n\nconst genRandomXY = snakeBody => {\n  const y = Math.floor(Math.random() * 15) * 20;\n  const x = Math.floor(Math.random() * 23) * 20;\n  let recurse = false;\n\n  for (let i = 0; i < snakeBody.length; i++) {\n    const temp_x = snakeBody[i][0];\n    const temp_y = snakeBody[i][1];\n\n    if (x === temp_x && y === temp_y) {\n      recurse = true;\n    }\n  }\n\n  if (recurse) {\n    return genRandomXY(snakeBody);\n  } else {\n    return [x, y];\n  }\n};\n\nconst Game = /*#__PURE__*/React.memo(_c = _s(({\n  setStateX,\n  setStateY,\n  setRestart,\n  x,\n  setX,\n  setScore\n}) => {\n  _s();\n\n  let localScore = 0;\n  const snake = new Snake(100, 100, 'right');\n  const apple = new Apple();\n  useEffect(() => {\n    const canvas = cRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const cW = canvas.width / 2;\n    const cH = canvas.height / 2;\n\n    const gameLogic = (ctx, canvas) => {\n      let x_ = snake.x;\n      let y_ = snake.y;\n      console.log(x_, y_);\n      const c = snake.collided();\n\n      if (!c) {\n        drawSnake(ctx, canvas);\n        drawApple(ctx, canvas);\n        const x = apple.getX();\n        const y = apple.getY();\n        snake.updatePostion(x, y);\n        snake.add();\n        apple.redraw(snake.x, snake.y);\n        setStateX(snake.x);\n        setStateY(snake.y);\n      } else if (c) {\n        setRestart(true);\n      }\n    };\n\n    let int = setInterval(() => {\n      gameLogic(ctx, canvas);\n    }, 150);\n\n    if (x) {\n      snake.resetSnake();\n      setX(false);\n      localScore = 0;\n      setScore(localScore);\n    }\n\n    window.addEventListener('keydown', logKey, cW, cH);\n    return () => {\n      clearInterval(int);\n      window.removeEventListener('keydown', logKey, cW, cH);\n    };\n  }, [x]);\n\n  const logKey = event => {\n    if (event.code === \"ArrowRight\") {\n      snake.changeDirection(\"right\");\n    } else if (event.code === \"ArrowLeft\") {\n      snake.changeDirection(\"left\");\n    } else if (event.code === \"ArrowUp\") {\n      snake.changeDirection(\"up\");\n    } else if (event.code === \"ArrowDown\") {\n      snake.changeDirection(\"down\");\n    } else if (event.keyCode === 32) {\n      snake.p();\n    } else if (event.keyCode === 13) {\n      snake.go();\n    }\n  };\n\n  function drawSnake(ctx, canvas) {\n    const squareSide = 20;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n\n    if (snake.snakeLength() > 0) {\n      for (let i = 0; i <= snake.snakeLength() - 1; i++) {\n        ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n      }\n    }\n\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawApple(ctx, canvas, x, y) {\n    const appleRadius = 10;\n    ctx.beginPath();\n    ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI * 2);\n    ctx.fillStyle = \"#D32F2F\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const cRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: \"'Press Start 2P', cursive\",\n        textAlign: \"center\"\n      },\n      children: \" Snake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        background: \"#262626\",\n        display: \"block\",\n        margin: \"0 auto\"\n      },\n      id: \"myCanvas\",\n      width: \"480\",\n      height: \"320\",\n      ref: cRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}, \"URm58pgjXa+ECeiVHN1N38QXQss=\"));\n_c2 = Game;\n\nfunction App() {\n  _s2();\n\n  const [stateX, setStateX] = useState(240);\n  const [stateY, setStateY] = useState(160);\n  const [restart, setRestart] = useState(false);\n  const [x, setX] = useState(false);\n  const [score, updateScore] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Game, {\n      setScore: updateScore,\n      setX: setX,\n      x: x,\n      setRestart: setRestart,\n      setStateX: setStateX,\n      setStateY: setStateY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), restart && /*#__PURE__*/_jsxDEV(\"h4\", {\n      onClick: () => {\n        setRestart(false);\n        setX(true);\n      },\n      style: {\n        fontFamily: \"'Press Start 2P', cursive\",\n        textAlign: \"center\",\n        cursor: \"grab\"\n      },\n      children: \" New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontFamily: \"'Press Start 2P', cursive\",\n        textAlign: \"center\",\n        cursor: \"grab\"\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"X9sGupr2nIzx6YVVY33JgsJpxm4=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Game$React.memo\");\n$RefreshReg$(_c2, \"Game\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/patrickwellins/Documents/games/snake/src/App.js"],"names":["React","useState","useEffect","useRef","Snake","constructor","x","y","direction","snakeBody","debugger","pause","changeDirection","getTail","snakeLength","go","updatePostion","appleX","appleY","tail","i","push","add","length","pop","Object","keys","collided","temp_x","temp_y","p","getSnakeCoords","values","resetSnake","Apple","randCoords","genRandomXY","snake","collision","snakeX","snakeY","localScore","setScore","redraw","getX","getY","Math","floor","random","recurse","Game","memo","setStateX","setStateY","setRestart","setX","apple","canvas","cRef","current","ctx","getContext","cW","width","cH","height","gameLogic","x_","y_","console","log","c","drawSnake","drawApple","int","setInterval","window","addEventListener","logKey","clearInterval","removeEventListener","event","code","keyCode","squareSide","clearRect","beginPath","rect","fillStyle","fill","closePath","appleRadius","arc","PI","fontFamily","textAlign","background","display","margin","App","stateX","stateY","restart","score","updateScore","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nclass Snake {\n\n  constructor(x, y, direction) {\n    this.x = x\n    this.y = y\n    this.direction = direction\n    this.snakeBody = {0:[this.x , this.y], 1:[this.x - 20, this.y], 2:[this.x - 40, this.y], 3:[this.x - 60, this.y]}\n    this.debugger = []\n    this.pause = false\n  }\n\n  changeDirection(direction){\n    this.direction = direction\n  }\n\n  getTail(){\n    return this.snakeBody[this.snakeLength() - 1]\n  }\n\n  go() {\n    this.pause = false\n  }\n\n  updatePostion(appleX, appleY){\n\n    if (!this.pause){\n      const tail = this.getTail()\n      if (this.snakeLength() > 1){\n\n      for (let i = this.snakeLength() - 1; i >= 1; i--){\n        this.snakeBody[i] = this.snakeBody[i - 1]\n      }\n  }\n\n    if (this.direction === 'up'){\n      this.y -= 20\n    }\n    else if (this.direction === 'down'){\n      this.y += 20\n    }\n    else if (this.direction === 'left'){\n      this.x -= 20\n    }\n    else if (this.direction === 'right'){\n      this.x += 20\n    }\n\n    this.snakeBody[0] = [this.x, this.y]\n\n    if (this.x === appleX && this.y === appleY){\n      this.debugger.push(tail)\n    }}\n  }\n\n  add(){\n    if (this.debugger.length === 1){\n      this.snakeBody[this.snakeLength()] = this.debugger.pop()\n    }\n  }\n\n  snakeLength() {\n    return Object.keys(this.snakeBody).length\n  }\n\n  collided() {\n\n      for (let i = 1; i < this.snakeLength(); i++){\n          const temp_x = this.snakeBody[i][0]\n          const temp_y = this.snakeBody[i][1]\n          if (this.x === temp_x && this.y === temp_y){\n            return true\n          }\n      }\n      if (this.y > 300 || this.y < 0 || this.x < 0 || this.x > 460){\n        return true\n\n      }\n      return false\n  }\n\n  p(){\n    this.pause = true\n  }\n\n  getSnakeCoords(){\n    return Object.values(this.snakeBody)\n  }\n\n  resetSnake() {\n      this.x = 100\n      this.y = 100\n      this.snakeBody = {0:[this.x , this.y], 1:[this.x - 20, this.y], 2:[this.x - 40, this.y], 3:[this.x - 60, this.y]}\n  }\n}\n\nclass Apple {\n\n  constructor() {\n    const randCoords = genRandomXY(snake.getSnakeCoords())\n    this.x = randCoords[0]\n    this.y = randCoords[1]\n  }\n\n  collision(snakeX, snakeY) {\n    if (snakeX === this.x && snakeY === this.y){\n      localScore += 1\n      setScore(localScore)\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  redraw(snakeX, snakeY){\n    if (this.collision(snakeX, snakeY)){\n      const randCoords = genRandomXY(snake.getSnakeCoords())\n      this.x = randCoords[0]\n      this.y = randCoords[1]\n    }\n  }\n\n  getX(){\n    return this.x\n  }\n\n  getY(){\n    return this.y\n  }\n}\n\n\nconst genRandomXY = (snakeBody) => {\n\n  const y = Math.floor(Math.random() * 15) * 20\n  const x = Math.floor(Math.random() * 23) * 20\n  let recurse = false\n  for (let i = 0; i < snakeBody.length; i++){\n    const temp_x = snakeBody[i][0]\n    const temp_y = snakeBody[i][1]\n    if (x === temp_x && y === temp_y){\n      recurse = true\n    }\n  }\n  if (recurse){\n    return genRandomXY(snakeBody)\n  }\n  else{\n    return [x, y]\n  }\n}\n\n\n\nconst Game = React.memo(({setStateX, setStateY, setRestart, x, setX, setScore}) => {\n\n\n  let localScore = 0\n\n  const snake = new Snake(100, 100, 'right')\n  const apple = new Apple()\n\n\n\n  \n\n\n\n\n  useEffect(() => {\n\n\n      const canvas = cRef.current\n      const ctx = canvas.getContext(\"2d\");\n      const cW = canvas.width/2\n      const cH = canvas.height/2\n\n      const gameLogic = (ctx, canvas) => {\n\n        let x_ = snake.x\n        let y_ = snake.y\n        console.log(x_, y_)\n        const c = snake.collided()\n\n        if (!c){\n          drawSnake(ctx, canvas)\n          drawApple(ctx, canvas)\n          const x = apple.getX()\n          const y = apple.getY()\n          snake.updatePostion(x, y)\n          snake.add()\n          apple.redraw(snake.x, snake.y)\n          setStateX(snake.x)\n          setStateY(snake.y)\n\n        }\n        else if (c){\n            setRestart(true)\n        }\n      }\n\n      let int = setInterval(() => {gameLogic(ctx, canvas)}, 150)\n\n      if (x){\n        snake.resetSnake()\n        setX(false)\n        localScore = 0\n        setScore(localScore)\n      }\n      window.addEventListener('keydown', logKey, cW, cH);\n      return () => {\n      clearInterval(int)\n      window.removeEventListener('keydown', logKey, cW, cH);\n  }\n},[x])\n\n  const logKey = (event) => {\n\n    if (event.code === \"ArrowRight\"){\n      snake.changeDirection(\"right\")\n    }\n    else if (event.code === \"ArrowLeft\"){\n      snake.changeDirection(\"left\")\n    }\n    else if (event.code === \"ArrowUp\" ){\n      snake.changeDirection(\"up\")\n    }\n    else if (event.code === \"ArrowDown\"){\n      snake.changeDirection(\"down\")\n    }\n    else if (event.keyCode === 32){\n      snake.p()\n    }\n    else if (event.keyCode === 13){\n      snake.go()\n    }\n  }\n\n  function drawSnake(ctx, canvas) {\n\n    const squareSide = 20\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath()\n    ctx.rect(snake.x, snake.y, squareSide, squareSide);\n    if (snake.snakeLength() > 0){\n\n      for (let i = 0; i <= snake.snakeLength() - 1; i++){\n\n          ctx.rect(snake.snakeBody[i][0], snake.snakeBody[i][1], squareSide, squareSide);\n      }\n    }\n    ctx.fillStyle = \"#388E3C\";\n    ctx.fill();\n    ctx.closePath();\n}\n\n  function drawApple(ctx, canvas, x, y) {\n\n\n      const appleRadius = 10\n      ctx.beginPath()\n      ctx.arc(apple.getX() + appleRadius, apple.getY() + appleRadius, appleRadius, 0, Math.PI*2);\n      ctx.fillStyle = \"#D32F2F\";\n      ctx.fill();\n      ctx.closePath();\n    }\n\n  const cRef = useRef(null)\n\n  return(\n    <div>\n        <h1 style ={{fontFamily: \"'Press Start 2P', cursive\", textAlign: \"center\"}}> Snake</h1>\n        <canvas  style={{ background: \"#262626\", display: \"block\", margin: \"0 auto\" }} id=\"myCanvas\" width=\"480\" height=\"320\" ref={cRef}></canvas>\n    </div>\n  )\n})\n\nfunction App() {\n\n  const [stateX, setStateX] = useState(240)\n  const [stateY, setStateY] = useState(160)\n  const [restart, setRestart] = useState(false)\n  const [x, setX] = useState(false)\n  const [score, updateScore] = useState(0)\n\n\n  return (\n    <div>\n        <Game setScore = {updateScore} setX ={setX} x={x} setRestart ={setRestart} setStateX={setStateX} setStateY={setStateY}/>\n\n\n        {restart &&   <h4 onClick={() => {setRestart(false); setX(true)}} style ={{fontFamily: \"'Press Start 2P', cursive\", textAlign: \"center\", cursor:\"grab\"}}> New Game</h4>}\n        <h4 style ={{fontFamily: \"'Press Start 2P', cursive\", textAlign: \"center\", cursor:\"grab\"}}>Score: {score}</h4>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}